syntax = "proto3";

package ordinals.v1;

// Represents a continuous block of ordinals assigned to a given UTXO
message OrdinalsBlockAssignment {
    string utxo = 1;
    int64 start = 2;
    int64 size = 3;
}

message Transaction {
    string txid = 1;
    // Output number
    int64 idx = 2;
    // Amount transferred in sats
    int64 amount = 3;
    // Fee in sats
    // int64 fee = 4;
    // Ordinals assignment (only present for coinbase transaction)
    optional OrdinalsBlockAssignment assignment = 4;
    // Input UTXOs
    repeated string input_utxos = 5;
    // Note: The ordinals blocks here are relative and refer to the
    // ordinals assigned to the input UTXOs
    // E.g.: The Nth to Mth ordinals of the input utxos should
    // be assigned to some output utxo
    repeated OrdinalsBlockAssignment relative_assignments = 6;
}

message Block {
    // Block timestamp
    int64 timestamp = 1;
    // Block number
    int64 number = 2;
    // Total miner reward (in sats)
    int64 miner_reward = 3;
    // Block subsidy (in sats)
    int64 subsidy = 4;
    // Miner fees (in sats)
    int64 fees = 5;
    // Block transactions
    repeated Transaction txs = 6;
}

message Inscription {
    // Optional MIME type of the inscription
    optional string content_type = 1;
    // Optional pointer if the inscription is not for the 
    // first ordinal of its inputs
    optional int64 pointer = 2;
    // Note: Not implemented
    optional string parent = 3;
    // Note: Not implemented
    optional string metadata = 4;
    // Note: Not implemented
    optional string metaprotocol = 5;
    // Note: Not implemented
    optional string content_encoding = 6;
    // Content of the inscription
    string content = 7;
}

message Inscriptions {
    repeated string inscriptions = 1;
}