// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.25.1

import { Writer, Reader } from "as-proto/assembly";

export class OrdinalBlock {
  static encode(message: OrdinalBlock, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.utxo);

    writer.uint32(18);
    writer.string(message.address);

    writer.uint32(24);
    writer.uint64(message.start);

    writer.uint32(32);
    writer.uint64(message.size);
  }

  static decode(reader: Reader, length: i32): OrdinalBlock {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new OrdinalBlock();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.utxo = reader.string();
          break;

        case 2:
          message.address = reader.string();
          break;

        case 3:
          message.start = reader.uint64();
          break;

        case 4:
          message.size = reader.uint64();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  utxo: string;
  address: string;
  start: u64;
  size: u64;

  constructor(
    utxo: string = "",
    address: string = "",
    start: u64 = 0,
    size: u64 = 0
  ) {
    this.utxo = utxo;
    this.address = address;
    this.start = start;
    this.size = size;
  }
}
