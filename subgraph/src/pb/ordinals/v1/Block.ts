// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.25.1

import { Writer, Reader } from "as-proto/assembly";
import { Transaction } from "./Transaction";

export class Block {
  static encode(message: Block, writer: Writer): void {
    writer.uint32(8);
    writer.int64(message.timestamp);

    writer.uint32(16);
    writer.int64(message.number);

    writer.uint32(24);
    writer.int64(message.minerReward);

    writer.uint32(32);
    writer.int64(message.subsidy);

    writer.uint32(40);
    writer.int64(message.fees);

    const txs = message.txs;
    for (let i: i32 = 0; i < txs.length; ++i) {
      writer.uint32(50);
      writer.fork();
      Transaction.encode(txs[i], writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): Block {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new Block();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.timestamp = reader.int64();
          break;

        case 2:
          message.number = reader.int64();
          break;

        case 3:
          message.minerReward = reader.int64();
          break;

        case 4:
          message.subsidy = reader.int64();
          break;

        case 5:
          message.fees = reader.int64();
          break;

        case 6:
          message.txs.push(Transaction.decode(reader, reader.uint32()));
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  timestamp: i64;
  number: i64;
  minerReward: i64;
  subsidy: i64;
  fees: i64;
  txs: Array<Transaction>;

  constructor(
    timestamp: i64 = 0,
    number: i64 = 0,
    minerReward: i64 = 0,
    subsidy: i64 = 0,
    fees: i64 = 0,
    txs: Array<Transaction> = []
  ) {
    this.timestamp = timestamp;
    this.number = number;
    this.minerReward = minerReward;
    this.subsidy = subsidy;
    this.fees = fees;
    this.txs = txs;
  }
}
