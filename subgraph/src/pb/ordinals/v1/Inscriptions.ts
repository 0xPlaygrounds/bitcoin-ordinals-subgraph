// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.25.1

import { Writer, Reader } from "as-proto/assembly";
import { Inscription } from "./Inscription";

export class Inscriptions {
  static encode(message: Inscriptions, writer: Writer): void {
    const inscriptions = message.inscriptions;
    for (let i: i32 = 0; i < inscriptions.length; ++i) {
      writer.uint32(10);
      writer.fork();
      Inscription.encode(inscriptions[i], writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): Inscriptions {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new Inscriptions();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.inscriptions.push(
            Inscription.decode(reader, reader.uint32())
          );
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  inscriptions: Array<Inscription>;

  constructor(inscriptions: Array<Inscription> = []) {
    this.inscriptions = inscriptions;
  }
}
