// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.25.1

import { Writer, Reader } from "as-proto/assembly";
import { ScriptPubKey } from "./ScriptPubKey";

export class Vout {
  static encode(message: Vout, writer: Writer): void {
    writer.uint32(9);
    writer.double(message.value);

    writer.uint32(16);
    writer.uint32(message.n);

    const scriptPubKey = message.scriptPubKey;
    if (scriptPubKey !== null) {
      writer.uint32(26);
      writer.fork();
      ScriptPubKey.encode(scriptPubKey, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): Vout {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new Vout();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.value = reader.double();
          break;

        case 2:
          message.n = reader.uint32();
          break;

        case 3:
          message.scriptPubKey = ScriptPubKey.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  value: f64;
  n: u32;
  scriptPubKey: ScriptPubKey | null;

  constructor(
    value: f64 = 0.0,
    n: u32 = 0,
    scriptPubKey: ScriptPubKey | null = null
  ) {
    this.value = value;
    this.n = n;
    this.scriptPubKey = scriptPubKey;
  }
}
